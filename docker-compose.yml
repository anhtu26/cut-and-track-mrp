# Docker Compose configuration for Cut-and-Track MRP (ITAR-compliant local hosting)
services:
  # React client application
  app:
    build:
      context: .
      dockerfile: Dockerfile.client
    ports:
      - "8081:8080"
    # Remove volume mounting for production to use the built dist folder
    environment:
      - NODE_ENV=production
      - VITE_API_URL=http://api-server:3002
    networks:
      - mrp-network
    depends_on:
      - api-server
    restart: always
      
  # API server (ITAR-compliant local backend)
  api-server:
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - "3002:3002"
    volumes:
      # Only mount uploads directory for persistent storage
      - ./uploads:/app/uploads
    environment:
      - NODE_ENV=production
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=mrp_db
      - DB_USER=postgres
      - DB_PASSWORD=postgres
      - DB_SSL=false
      - PORT=3002
      - JWT_SECRET=mrp_jwt_secret_production_use_env_var
      - MAX_FILE_SIZE=20971520
    networks:
      - mrp-network
    depends_on:
      - postgres
    restart: always
      
  # PostgreSQL database for local deployment (ITAR-compliant)
  postgres:
    image: postgres:15
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: mrp_db
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./database/migrations:/docker-entrypoint-initdb.d/migrations
      - ./database/init.sh:/docker-entrypoint-initdb.d/init.sh
    networks:
      - mrp-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

networks:
  mrp-network:
    driver: bridge

volumes:
  postgres-data:
